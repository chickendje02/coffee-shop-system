# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CICD to AWS EC2

on:
  workflow_dispatch:
  
  push:
    branches: ["implement-ci-cd" ]


jobs:
  build:
    permissions: write-all
    runs-on: [ubuntu-latest]
    #    services:
#      # Label used to access the service container
#      postgres:
#        # Docker Hub image
#        image: postgres
#        # Provide the password for postgres
#        env:
#          POSTGRES_PASSWORD: postgres
#          POSTGRES_USER: test12345
#          POSTGRES_DB: coffee_shop_system_management
#        # Set health checks to wait until postgres has started
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
    defaults:
      run:
        working-directory: ./coffee-shop-system-management/coffee-shop-service
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean install -DskipTests
      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
        with:
          directory: ./coffee-shop-system-management/coffee-shop-service
      - name: Login to Docker Hub
        run: docker login -u ${{secrets.DOCKER_HUB_USERNAME}} -p ${{secrets.DOCKER_HUB_PASSWORD}}
      - name: Build Docker Image
        run: docker build -t chickendje02/coffee-shop-service .
      - name: Publish Image to Docker hub
        run: docker push chickendje02/coffee-shop-service:latest
  deploy:
    needs: build
    runs-on: [self-hosted]
    steps:
      - name: Pull Image from docker hub
        run: docker pull chickendje02/coffee-shop-service:latest
      - name: Delete old  container
        run: docker rm -f coffee-shop-service-container
      - name: Run docker container
        run: docker run -d -p 8081:8081 --name coffee-shop-service-container chickendje02/coffee-shop-service:latest
